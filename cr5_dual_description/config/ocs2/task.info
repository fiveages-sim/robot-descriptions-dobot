; robot model meta-information
model_information {
  manipulatorModelType     0      // 0: Default-arm (fixed base), 1: Wheel-based manipulator, 2: Floating-arm manipulator, 3: Fully actuated floating-arm manipulator

  ; motion joints in the URDF to consider fixed
  removeJoints {
  }

  ; base frame of the robot (from URDF)
  baseFrame                       "base_link"
  ; end-effector frames for dual arms (from URDF) - using TCP (Tool Center Point)
  eeFrame                         "left_tcp"
  eeFrame1                        "right_tcp"
}

model_settings
{
  usePreComputation               true
  recompileLibraries              true
}

; DDP settings
ddp
{
  algorithm                       SLQ

  nThreads                        3
  threadPriority                  50

  maxNumIterations                1
  minRelCost                      0.1
  constraintTolerance             1e-3

  displayInfo                     false
  displayShortSummary             false
  checkNumericalStability         false
  debugPrintRollout               false
  debugCaching                    false

  AbsTolODE                       1e-5
  RelTolODE                       1e-3
  maxNumStepsPerSecond            100000
  timeStep                        1e-3
  backwardPassIntegratorType      ODE45

  constraintPenaltyInitialValue   20.0
  constraintPenaltyIncreaseRate   2.0

  preComputeRiccatiTerms          true

  useFeedbackPolicy               false

  strategy                        LINE_SEARCH
  lineSearch
  {
    minStepLength                 1e-2
    maxStepLength                 1.0
    hessianCorrectionStrategy     DIAGONAL_SHIFT
    hessianCorrectionMultiple     1e-3
  }
}

; Rollout settings
rollout
{
  AbsTolODE                       1e-5
  RelTolODE                       1e-3
  timeStep                        1e-2
  integratorType                  ODE45
  maxNumStepsPerSecond            100000
  checkNumericalStability         false
}

; MPC settings
mpc
{
  timeHorizon                     2.0   ; [s]
  solutionTimeWindow              0.4   ; [s]
  coldStart                       false

  debugPrint                      false

  mpcDesiredFrequency             100   ; [Hz]
  mrtDesiredFrequency             500   ; [Hz]
}

; initial state
initialState
{
  ; initial state for the different types of arm base DOFs
  base
  {
    defaultManipulator
    {
    }

    floatingArmManipulator
    {
      (0,0)  0.0  ; position x
      (1,0)  0.0  ; position y
      (2,0)  0.5  ; position z
      (3,0)  0.0  ; euler angle z
      (4,0)  0.0  ; euler angle y
      (5,0)  0.0  ; euler angle x
    }

    fullyActuatedFloatingArmManipulator
    {
      (0,0)  0.0  ; position x
      (1,0)  0.0  ; position y
      (2,0)  0.0  ; position z
      (3,0)  0.0  ; euler angle z
      (4,0)  0.0  ; euler angle y
      (5,0)  0.0  ; euler angle x
    }

    wheelBasedMobileManipulator
    {
      (0,0)  0.0  ; position x
      (1,0)  0.0  ; position y
      (2,0)  0.0  ; heading
    }
  }

  ; initial state for the arm DOFs (12 joints: 6 left + 6 right)
  arm
  {
    (0,0)   0.0     ; left_joint1
    (1,0)   0.0     ; left_joint2
    (2,0)   0.0     ; left_joint3
    (3,0)   0.0     ; left_joint4
    (4,0)   0.0     ; left_joint5
    (5,0)   0.0     ; left_joint6
    (6,0)   0.0     ; right_joint1
    (7,0)   0.0     ; right_joint2
    (8,0)   0.0     ; right_joint3
    (9,0)   0.0     ; right_joint4
    (10,0)  0.0     ; right_joint5
    (11,0)  0.0     ; right_joint6
  }
}

inputCost
{
  ; control weight matrix
  R
  {
    ; input costs for the different types of arm base DOFs
    base
    {
      defaultManipulator
      {
      }

      floatingArmManipulator
      {
      }

      fullyActuatedFloatingArmManipulator
      {
        scaling 1e-2
        (0,0)  5.0  ; position x
        (1,1)  5.0  ; position y
        (2,2)  5.0  ; position z
        (3,3)  5.0  ; euler angle z
        (4,4)  5.0  ; euler angle y
        (5,5)  5.0  ; euler angle x
      }

      wheelBasedMobileManipulator
      {
        scaling 1e-2
        (0,0)  5.0  ; forward velocity
        (1,1)  5.0  ; turning velocity
      }
    }

    ; input costs for the arm DOFs (12 joints: 6 left + 6 right)
    ; Using same cost values as single CR5 arm
    arm
    {
      scaling 1e-3

      (0,0)  1.0  ; left_joint1 velocity
      (1,1)  1.0  ; left_joint2 velocity
      (2,2)  1.0  ; left_joint3 velocity
      (3,3)  1.0  ; left_joint4 velocity
      (4,4)  1.0  ; left_joint5 velocity
      (5,5)  1.0  ; left_joint6 velocity
      (6,6)  1.0  ; right_joint1 velocity
      (7,7)  1.0  ; right_joint2 velocity
      (8,8)  1.0  ; right_joint3 velocity
      (9,9)  1.0  ; right_joint4 velocity
      (10,10) 1.0  ; right_joint5 velocity
      (11,11) 1.0  ; right_joint6 velocity
    }
  }
}

endEffector
{
  ; end effector quadratic penalty scaling
  ; Using dual arm mode like astribot_s1
  dualArmMode      true

  leftArm
  {
    muPosition      5.0
    muOrientation   2.5
  }

  rightArm
  {
    muPosition      5.0
    muOrientation   2.5
  }
}

finalEndEffector
{
  dualArmMode      true

  leftArm
  {
    muPosition      5.0
    muOrientation   2.5
  }

  rightArm
  {
    muPosition      5.0
    muOrientation   2.5
  }
}

selfCollision
{ 
  ; activate self-collision constraint
  activate  true

  ; Self Collision raw object pairs
  collisionObjectPairs
  {
    [0] "7, 14";
    [1] "10, 14";
    [2] "19, 26";
    [3] "22, 26";
    [4] "3, 15";
    [5] "3, 27";
    [6] "3, 13";
    [7] "3, 25";
    [8] "3, 12";
    [9] "3, 24";
    [10] "5, 13";
    [11] "17, 25";
    [12] "13, 6";
    [13] "25, 18";
    [14] "1, 13";
    [15] "1, 25";
    [16] "1, 8";
    [17] "1, 20";
    [18] "1, 15";
    [19] "1, 27";

  }
 
  ; Self Collision pairs (disabled when using collisionObjectPairs)
  collisionLinkPairs
  {
  }

  ; minimum distance allowed between the pairs
  minimumDistance  0.015

  ; relaxed log barrier mu
  mu      1e-2

  ; relaxed log barrier delta
  delta   1e-3
}

; Only applied for arm joints: limits parsed from URDF
jointPositionLimits
{
  ; activate constraint
  activate  true

  ; relaxed log barrier mu (same as single CR5)
  mu      0.001

  ; relaxed log barrier delta
  delta   1e-3
}

jointVelocityLimits
{
  ; relaxed log barrier mu
  mu      0.01

  ; relaxed log barrier delta
  delta   1e-3

  lowerBound
  {
    ; velocity limits for the different types of arm base DOFs
    base
    {
      defaultManipulator
      {
      }

      floatingArmManipulator
      {
      }

      fullyActuatedFloatingArmManipulator
      {
        (0,0)  -0.1  ; linear velocity x
        (1,0)  -0.1  ; linear velocity y
        (2,0)  -0.1  ; linear velocity z
        (3,0)  -0.3  ; euler angle velocity z
        (4,0)  -0.3  ; euler angle velocity y
        (5,0)  -0.3  ; euler angle velocity x
      }

      wheelBasedMobileManipulator
      {
        (0,0)  -0.1 ; forward velocity
        (1,0)  -0.3 ; turning velocity
      }
    }

    ; velocity limits for the arm DOFs (12 joints)
    ; Using same velocity limits as single CR5: Â±1.57 rad/s
    arm
    {
      (0,0)  -1.57     ; left_joint1 [rad/s]
      (1,0)  -1.57     ; left_joint2 [rad/s]
      (2,0)  -1.57     ; left_joint3 [rad/s]
      (3,0)  -1.57     ; left_joint4 [rad/s]
      (4,0)  -1.57     ; left_joint5 [rad/s]
      (5,0)  -1.57     ; left_joint6 [rad/s]
      (6,0)  -1.57     ; right_joint1 [rad/s]
      (7,0)  -1.57     ; right_joint2 [rad/s]
      (8,0)  -1.57     ; right_joint3 [rad/s]
      (9,0)  -1.57     ; right_joint4 [rad/s]
      (10,0) -1.57     ; right_joint5 [rad/s]
      (11,0) -1.57     ; right_joint6 [rad/s]
    }
  }

  upperBound
  {
    ; velocity limits for the different types of arm base DOFs
    base
    {
      defaultManipulator
      {
      }

      floatingArmManipulator
      {
      }

      fullyActuatedFloatingArmManipulator
      {
        (0,0)  0.1  ; linear velocity x
        (1,0)  0.1  ; linear velocity y
        (2,0)  0.1  ; linear velocity z
        (3,0)  0.3  ; euler angle velocity z
        (4,0)  0.3  ; euler angle velocity y
        (5,0)  0.3  ; euler angle velocity x
      }

      wheelBasedMobileManipulator
      {
        (0,0)  0.1 ; forward velocity
        (1,0)  0.3 ; turning velocity
      }
    }

    ; velocity limits for the arm DOFs (12 joints)
    arm
    {
      (0,0)  1.57      ; left_joint1 [rad/s]
      (1,0)  1.57      ; left_joint2 [rad/s]
      (2,0)  1.57      ; left_joint3 [rad/s]
      (3,0)  1.57      ; left_joint4 [rad/s]
      (4,0)  1.57      ; left_joint5 [rad/s]
      (5,0)  1.57      ; left_joint6 [rad/s]
      (6,0)  1.57      ; right_joint1 [rad/s]
      (7,0)  1.57      ; right_joint2 [rad/s]
      (8,0)  1.57      ; right_joint3 [rad/s]
      (9,0)  1.57      ; right_joint4 [rad/s]
      (10,0) 1.57      ; right_joint5 [rad/s]
      (11,0) 1.57      ; right_joint6 [rad/s]
    }
  }
}
